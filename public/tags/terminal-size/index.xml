<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal-Size on WriteUps &amp; Recherches Cybersécurité</title>
    <link>http://localhost:41813/cybersecurity-notes/tags/terminal-size/</link>
    <description>Recent content in Terminal-Size on WriteUps &amp; Recherches Cybersécurité</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Sun, 14 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:41813/cybersecurity-notes/tags/terminal-size/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cyber Apocalypse 2024 - ImpossibleMaze</title>
      <link>http://localhost:41813/cybersecurity-notes/writeups/cyber-apocalypse/2024-04-14-impossiblemaze/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:41813/cybersecurity-notes/writeups/cyber-apocalypse/2024-04-14-impossiblemaze/</guid>
      <description>ImpossibleMaze - Cyber Apocalypse 2024 Description du challenge ImpossibleMaze est un challenge de reverse engineering du Cyber Apocalypse CTF 2024. Le programme simule un labyrinthe qui semble impossible à résoudre, mais qui cache un mécanisme de validation basé sur la taille du terminal.&#xA;Analyse du binaire Après décompilation et analyse du code, nous avons découvert que le binaire vérifie la taille du terminal d&amp;rsquo;exécution. Si cette taille ne correspond pas exactement à 13 lignes et 37 colonnes (13x37 ou &amp;ldquo;LEET&amp;rdquo; en leetspeak), le labyrinthe est généré d&amp;rsquo;une manière qui le rend impossible à résoudre.</description>
    </item>
  </channel>
</rss>
